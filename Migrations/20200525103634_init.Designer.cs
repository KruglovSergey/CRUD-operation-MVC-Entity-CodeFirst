// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeledocTask.Data;

namespace TeledocTask.Migrations
{
    [DbContext(typeof(ENTContext))]
    [Migration("20200525103634_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeledocTask.Models.Entity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CrDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntType")
                        .HasColumnType("int");

                    b.Property<long>("INN")
                        .HasColumnType("bigint");

                    b.Property<int?>("ParentEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ParentEntityID");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("TeledocTask.Models.Entity", b =>
                {
                    b.HasOne("TeledocTask.Models.Entity", "ParentEntity")
                        .WithMany()
                        .HasForeignKey("ParentEntityID");
                });
#pragma warning restore 612, 618
        }
    }
}
